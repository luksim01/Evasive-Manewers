name: continuous integration 🔨🔎👾

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    name: testing ⚙️
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: checkout repository 📂
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: cache 💾
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: run tests 🔎
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN || github.token}}

  build:
    if: github.event_name == 'pull_request'
    name: building ${{ matrix.targetPlatform }} 👾
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL
          - StandaloneOSX
          - StandaloneWindows64
    steps:
      # Checkout
      - name: checkout repository 📂
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Build
      - name: build for ${{ matrix.targetPlatform }} 🔨
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Evasive-Manewers-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
